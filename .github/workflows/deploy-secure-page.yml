name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Create Main Page
        run: |
          cat > index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Secure TV Preview - mdsirome</title>
              <style>
                  * {
                      margin: 0;
                      padding: 0;
                      box-sizing: border-box;
                  }
                  body {
                      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                      background: linear-gradient(135deg, #1a1a2e 0%, #16213e 100%);
                      color: #ffffff;
                      min-height: 100vh;
                      padding: 20px;
                  }
                  .container {
                      max-width: 1200px;
                      margin: 0 auto;
                  }
                  .header {
                      text-align: center;
                      margin-bottom: 30px;
                      padding: 30px;
                      background: rgba(255, 255, 255, 0.1);
                      border-radius: 15px;
                      backdrop-filter: blur(10px);
                      border: 1px solid rgba(255, 255, 255, 0.2);
                  }
                  .header h1 {
                      font-size: 2.5em;
                      margin-bottom: 10px;
                      background: linear-gradient(45deg, #00b4db, #0083b0);
                      -webkit-background-clip: text;
                      -webkit-text-fill-color: transparent;
                  }
                  .security-badge {
                      display: inline-block;
                      background: rgba(0, 180, 219, 0.2);
                      padding: 8px 16px;
                      border-radius: 20px;
                      margin: 10px 0;
                      border: 1px solid #00b4db;
                  }
                  .preview-container {
                      background: rgba(0, 0, 0, 0.5);
                      border-radius: 15px;
                      padding: 20px;
                      border: 1px solid rgba(255, 255, 255, 0.1);
                  }
                  .preview-frame {
                      width: 100%;
                      height: 70vh;
                      border: none;
                      border-radius: 10px;
                      background: #000000;
                  }
                  .loading {
                      text-align: center;
                      padding: 60px 20px;
                      font-size: 1.2em;
                  }
                  .loading-spinner {
                      border: 4px solid rgba(255, 255, 255, 0.3);
                      border-radius: 50%;
                      border-top: 4px solid #00b4db;
                      width: 40px;
                      height: 40px;
                      animation: spin 1s linear infinite;
                      margin: 0 auto 20px;
                  }
                  @keyframes spin {
                      0% { transform: rotate(0deg); }
                      100% { transform: rotate(360deg); }
                  }
                  .status {
                      text-align: center;
                      margin: 20px 0;
                      padding: 15px;
                      border-radius: 10px;
                      background: rgba(255, 255, 255, 0.1);
                  }
                  .success { background: rgba(46, 204, 113, 0.2); border: 1px solid #2ecc71; }
                  .error { background: rgba(231, 76, 60, 0.2); border: 1px solid #e74c3c; }
              </style>
          </head>
          <body>
              <div class="container">
                  <div class="header">
                      <h1>üîê Secure TV Preview</h1>
                      <div class="security-badge">
                          üîí Protected Content ‚Ä¢ üõ°Ô∏è Secure Loading ‚Ä¢ üì∫ Live TV
                      </div>
                      <p>Your content is loaded securely with advanced protection</p>
                  </div>

                  <div class="status" id="status">
                      <div class="loading-spinner"></div>
                      <p>Initializing secure connection...</p>
                  </div>

                  <div class="preview-container">
                      <iframe 
                          class="preview-frame" 
                          id="tvFrame"
                          sandbox="allow-scripts allow-same-origin allow-forms allow-popups allow-presentation"
                          allowfullscreen
                      ></iframe>
                  </div>
              </div>

              <script>
                  // Update status function
                  function updateStatus(message, type = '') {
                      const statusEl = document.getElementById('status');
                      statusEl.innerHTML = message;
                      statusEl.className = `status ${type}`;
                  }

                  // Load secure content
                  async function loadSecureContent() {
                      try {
                          updateStatus('<div class="loading-spinner"></div><p>Connecting to secure source...</p>');
                          
                          // Add timestamp to prevent caching
                          const timestamp = new Date().getTime();
                          const sourceUrl = `https://mdsirome.github.io/tool/LiveTVPC.html?t=${timestamp}`;
                          
                          updateStatus('<div class="loading-spinner"></div><p>Loading content securely...</p>');
                          
                          // Set the iframe source directly
                          const iframe = document.getElementById('tvFrame');
                          iframe.src = sourceUrl;
                          
                          // Handle iframe load events
                          iframe.onload = function() {
                              updateStatus('<p>‚úÖ Content loaded successfully!</p>', 'success');
                          };
                          
                          iframe.onerror = function() {
                              updateStatus('<p>‚ùå Failed to load content. Please try again.</p>', 'error');
                          };
                          
                          // Fallback timeout
                          setTimeout(() => {
                              if (iframe.src && !iframe.contentWindow.document.body.innerHTML) {
                                  updateStatus('<p>‚ö†Ô∏è Content taking longer than expected...</p>');
                              }
                          }, 5000);

                      } catch (error) {
                          updateStatus(`<p>‚ùå Error: ${error.message}</p>`, 'error');
                          console.error('Loading error:', error);
                      }
                  }

                  // Start loading when page is ready
                  document.addEventListener('DOMContentLoaded', function() {
                      setTimeout(loadSecureContent, 1000);
                  });
              </script>
          </body>
          </html>
          EOF
          
          echo "‚úÖ Main page created successfully"

      - name: Setup Pages
        uses: actions/configure-pages@v3
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: .

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
