name: Deploy Secure Preview Page

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Create secure HTML page
      run: |
        cat > index.html << 'EOF'
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Secure TV Preview</title>
            <style>
                body {
                    margin: 0;
                    padding: 20px;
                    font-family: Arial, sans-serif;
                    background: #1a1a1a;
                    color: white;
                }
                .container {
                    max-width: 1200px;
                    margin: 0 auto;
                }
                .header {
                    text-align: center;
                    margin-bottom: 20px;
                    padding: 20px;
                    background: #2d2d2d;
                    border-radius: 10px;
                }
                .preview-frame {
                    width: 100%;
                    height: 80vh;
                    border: 2px solid #444;
                    border-radius: 10px;
                    background: black;
                }
                .loading {
                    text-align: center;
                    padding: 50px;
                    font-size: 18px;
                }
                .error {
                    color: #ff6b6b;
                    text-align: center;
                    padding: 20px;
                }
                .security-notice {
                    background: #2d2d2d;
                    padding: 15px;
                    border-radius: 8px;
                    margin: 20px 0;
                    border-left: 4px solid #007acc;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <div class="header">
                    <h1>üîí Secure TV Preview</h1>
                    <p>Content loaded securely from protected source</p>
                    <div class="security-notice">
                        <strong>Security Features:</strong> 
                        Sandboxed Content ‚Ä¢ Hidden URLs ‚Ä¢ Protected Playlists
                    </div>
                </div>
                
                <div id="preview-container">
                    <div class="loading">
                        <h3>Loading secure content...</h3>
                        <p>Please wait while we fetch the content securely</p>
                    </div>
                </div>
            </div>

            <script>
                // Secure content loader
                async function loadSecureContent() {
                    try {
                        const timestamp = new Date().getTime();
                        const response = await fetch(`https://mdsirome.github.io/tool/LiveTVPC.html?t=${timestamp}`);
                        
                        if (!response.ok) {
                            throw new Error(`Failed to load content: ${response.status}`);
                        }
                        
                        const htmlContent = await response.text();
                        
                        // Create secure iframe
                        const iframe = document.createElement('iframe');
                        iframe.className = 'preview-frame';
                        iframe.sandbox = "allow-scripts allow-same-origin allow-forms allow-popups allow-presentation";
                        iframe.srcdoc = htmlContent;
                        
                        document.getElementById('preview-container').innerHTML = '';
                        document.getElementById('preview-container').appendChild(iframe);
                        
                    } catch (error) {
                        document.getElementById('preview-container').innerHTML = 
                            '<div class="error">' +
                            '<h3>‚ùå Loading Error</h3>' +
                            '<p>' + error.message + '</p>' +
                            '<p>Please check if the source URL is accessible.</p>' +
                            '</div>';
                        console.error('Loading error:', error);
                    }
                }

                // Load content when page is ready
                document.addEventListener('DOMContentLoaded', function() {
                    setTimeout(loadSecureContent, 1000);
                });
            </script>
        </body>
        </html>
        EOF
        
        # Create a simple test file to verify deployment
        cat > test.html << 'EOF'
        <!DOCTYPE html>
        <html>
        <head>
            <title>Test Page</title>
        </head>
        <body>
            <h1>Test Page Working!</h1>
            <p>If you can see this, GitHub Pages is working correctly.</p>
            <a href="index.html">Go to Secure Preview</a>
        </body>
        </html>
        EOF

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: .

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
